     1                                  extern OutNumber
     2                                  %include "printmacros.mac"
     1                              <1> extern  fprintf
     2                              <1> extern  OutContainer
     3                              <1> 
     4                              <1> ;-------------------------------------------------------------
     5                              <1> ; Вывод строки, передаваемой непосредственно макросу
     6                              <1> ; с переводом на следующую строку
     7                              <1> %macro  PrintStr2    2
     8                              <1>     section .data
     9                              <1>         %%arg1  db  %1,10,0     ; first argument
    10                              <1>     section .text               ; the printf arguments
    11                              <1>         mov rdi, %2
    12                              <1>         mov rsi, %%arg1
    13                              <1>         mov rax, 0              ; no floating point
    14                              <1>         call fprintf
    15                              <1> %endmacro
    16                              <1> 
    17                              <1> ; Вывод содержимого контейнера
    18                              <1> %macro  PrintContainer2    3
    19                              <1>     mov     rdi, %1
    20                              <1>     mov     esi, %2
    21                              <1>     mov     rdx, %3
    22                              <1>     mov     rax, 0              ; нет чисел с плавающей точкой
    23                              <1>     call    OutContainer
    24                              <1> %endmacro
    25                              <1> 
    26                              <1> %macro  PrintInt2    2
    27                              <1>     section .data
    28                              <1>         %%arg1  db  "%d",0     ; first argument
    29                              <1>     section .text               ; the printf arguments
    30                              <1>         mov rdi, %2
    31                              <1>         mov rsi, %%arg1
    32                              <1>         mov rdx, %1
    33                              <1>         mov rax, 0              ; no floating point
    34                              <1>         call fprintf
    35                              <1> %endmacro
     3                                  
     4                                  global BubbleSortContainer
     5                                  BubbleSortContainer:
     6                                  section .data
     7 00000000 25643A2000                  numFmt  db  "%d: ",0
     8                                  section .bss
     9 00000000 <res 00000008>              pcont  resq    1   ; адрес контейнера
    10 00000008 <res 00000004>              len    resd    1   ; адрес для сохранения числа введенных элементов
    11 0000000C <res 00000008>              FILE   resq    1   ; указатель на файл
    12 00000014 <res 00000004>              cntr   resd    1   ; вспомогательный счетчик
    13 00000018 <res 00000004>              cntr2   resd    1   ; вспомогательный счетчик
    14 0000001C <res 00000004>              lptr    resd    1   ; вспомогательный счетчик
    15                                  
    16                                  section .text
    17 00000000 55                      push rbp
    18 00000001 4889E5                  mov rbp, rsp
    19                                  
    20 00000004 48893C25[00000000]          mov [pcont], rdi   ; сохраняется указатель на контейнер
    21 0000000C 893425[08000000]            mov [len],   esi     ; сохраняется число элементов
    22 00000013 48891425[0C000000]          mov [FILE],  rdx    ; сохраняется указатель на файл
    23 0000001B 8A0C25[08000000]        	mov cl, [len]					;set cl with array length
    24 00000022 880C25[14000000]        	mov [cntr], cl					;set this variable with array length
    25                                  
    26 00000029 488B3C25[00000000]          mov     rdi, [pcont]
    27 00000031 488B3425[0C000000]          mov     rsi, [FILE]
    28 00000039 E8(00000000)                call OutNumber  
    29                                      PrintStr2 "entered:", [FILE]
    29                              <1>  section .data
    29 00000005 656E74657265643A0A- <1>  %%arg1 db %1,10,0
    29 0000000E 00                  <1>
    29                              <1>  section .text
    29 0000003E 488B3C25[0C000000]  <1>  mov rdi, %2
    29 00000046 48BE-               <1>  mov rsi, %%arg1
    29 00000048 [0500000000000000]  <1>
    29 00000050 B800000000          <1>  mov rax, 0
    29 00000055 E8(00000000)        <1>  call fprintf
    30                                  
    31                                      up1 :
    32 0000005A 488B3C25[00000000]      	mov rdi, [pcont]						;Points to start
    33 00000062 8A0425[14000000]        	mov al, [cntr]					;
    34 00000069 8A1C25[1C000000]        	mov bl, [lptr]
    35 00000070 28D8                    	sub al, bl						; n-i (Rather to increase i, Decrements n)
    36 00000072 880425[18000000]        	mov [cntr2], al					; j pointer in bubble sort
    37                                  
    38                                      PrintStr2 "entered 2", [FILE]
    38                              <1>  section .data
    38 0000000F 656E74657265642032- <1>  %%arg1 db %1,10,0
    38 00000018 0A00                <1>
    38                              <1>  section .text
    38 00000079 488B3C25[0C000000]  <1>  mov rdi, %2
    38 00000081 48BE-               <1>  mov rsi, %%arg1
    38 00000083 [0F00000000000000]  <1>
    38 0000008B B800000000          <1>  mov rax, 0
    38 00000090 E8(00000000)        <1>  call fprintf
    39                                      PrintContainer2 [pcont], [len], [FILE]
    39 00000095 488B3C25[00000000]  <1>  mov rdi, %1
    39 0000009D 8B3425[08000000]    <1>  mov esi, %2
    39 000000A4 488B1425[0C000000]  <1>  mov rdx, %3
    39 000000AC B800000000          <1>  mov rax, 0
    39 000000B1 E8(00000000)        <1>  call OutContainer
    40                                  
    41                                  	up2:
    42                                          PrintStr2 "entered 3", [FILE]
    42                              <1>  section .data
    42 0000001A 656E74657265642033- <1>  %%arg1 db %1,10,0
    42 00000023 0A00                <1>
    42                              <1>  section .text
    42 000000B6 488B3C25[0C000000]  <1>  mov rdi, %2
    42 000000BE 48BE-               <1>  mov rsi, %%arg1
    42 000000C0 [1A00000000000000]  <1>
    42 000000C8 B800000000          <1>  mov rax, 0
    42 000000CD E8(00000000)        <1>  call fprintf
    43                                          PrintContainer2 [pcont], [len], [FILE]
    43 000000D2 488B3C25[00000000]  <1>  mov rdi, %1
    43 000000DA 8B3425[08000000]    <1>  mov esi, %2
    43 000000E1 488B1425[0C000000]  <1>  mov rdx, %3
    43 000000E9 B800000000          <1>  mov rax, 0
    43 000000EE E8(00000000)        <1>  call OutContainer
    44                                          PrintInt2 [pcont], [FILE]
    44                              <1>  section .data
    44 00000025 256400              <1>  %%arg1 db "%d",0
    44                              <1>  section .text
    44 000000F3 488B3C25[0C000000]  <1>  mov rdi, %2
    44 000000FB 48BE-               <1>  mov rsi, %%arg1
    44 000000FD [2500000000000000]  <1>
    44 00000105 488B1425[00000000]  <1>  mov rdx, %1
    44 0000010D B800000000          <1>  mov rax, 0
    44 00000112 E8(00000000)        <1>  call fprintf
    45                                          ; PrintInt2 [pcont+1], [FILE]
    46                                  
    47 00000117 8A07                    		mov al, [rdi]				;Get [j] in al
    48 00000119 8A5F01                  		mov bl, [rdi+1]			;Get [j+1]in bl
    49 0000011C 38D8                    		cmp al, bl
    50 0000011E 7205                    		jb skip						;Compares
    51 00000120 884701                  		mov [rdi+1], al					;If larger swapped
    52 00000123 881F                    		mov [rdi], bl
    53                                  		skip:
    54                                              PrintStr2 "entered skip", [FILE]
    54                              <1>  section .data
    54 00000028 656E74657265642073- <1>  %%arg1 db %1,10,0
    54 00000031 6B69700A00          <1>
    54                              <1>  section .text
    54 00000125 488B3C25[0C000000]  <1>  mov rdi, %2
    54 0000012D 48BE-               <1>  mov rsi, %%arg1
    54 0000012F [2800000000000000]  <1>
    54 00000137 B800000000          <1>  mov rax, 0
    54 0000013C E8(00000000)        <1>  call fprintf
    55 00000141 4883C701                		    add rdi, 1				;Else continues to next number
    56 00000145 802C25[18000000]01      		    sub byte[cntr2], 1
    57 0000014D 0F8563FFFFFF            		    jnz up2
    58                                  			
    59 00000153 802C25[14000000]01      	sub byte[cntr], 1						;Decrements n (Rather to increase i)
    60 0000015B 0F85F9FEFFFF            	jnz up1
    61 00000161 C3                      	ret
    62 00000162 C9                      leave
    63 00000163 C3                      ret
