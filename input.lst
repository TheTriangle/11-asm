     1                                  ; file.asm - использование файлов в NASM
     2                                  extern printf
     3                                  extern fscanf
     4                                  
     5                                  extern COMPLEXNUMBER
     6                                  extern FRACTION
     7                                  extern COORDINATES
     8                                  
     9                                  ;----------------------------------------------
    10                                  ; // Ввод параметров комплексного числа из файла
    11                                  ; void InCompexNumber(void *r, FILE *ifst) {
    12                                  ;     fscanf(ifst, "%d%d", (int*)r, (int*)(r+intSize));
    13                                  ; }
    14                                  global InComplexNumber
    15                                  InComplexNumber:
    16                                  section .data
    17 00000000 2564256400                  .infmt db "%d%d",0
    18                                  section .bss
    19 00000000 <res 00000008>              .FILE   resq    1   ; временное хранение указателя на файл
    20 00000008 <res 00000008>              .pcomp  resq    1   ; адрес прямоугольника
    21                                  section .text
    22 00000000 55                      push rbp
    23 00000001 4889E5                  mov rbp, rsp
    24                                  
    25                                      ; Сохранение принятых аргументов
    26 00000004 48893C25[08000000]          mov     [.pcomp], rdi          ; сохраняется адрес прямоугольника
    27 0000000C 48893425[00000000]          mov     [.FILE], rsi          ; сохраняется указатель на файл
    28                                  
    29                                      ; Ввод прямоугольника из файла
    30 00000014 488B3C25[00000000]          mov     rdi, [.FILE]
    31 0000001C 48BE-                       mov     rsi, .infmt         ; Формат - 1-й аргумент
    31 0000001E [0000000000000000] 
    32 00000026 488B1425[08000000]          mov     rdx, [.pcomp]       ; &x
    33 0000002E 488B0C25[08000000]          mov     rcx, [.pcomp]
    34 00000036 4883C104                    add     rcx, 4              ; &y = &x + 4
    35 0000003A B800000000                  mov     rax, 0              ; нет чисел с плавающей точкой
    36 0000003F E8(00000000)                call    fscanf
    37                                  
    38 00000044 C9                      leave
    39 00000045 C3                      ret
    40                                  
    41                                  ; // Ввод параметров треугольника из файла
    42                                  ; void InTriangle(void *t, FILE *ifst) {
    43                                  ;     fscanf(ifst, "%d%d%d", (int*)t,
    44                                  ;            (int*)(t+intSize), (int*)(t+2*intSize));
    45                                  ; }
    46                                  global InFraction
    47                                  InFraction:
    48                                  section .data
    49 00000005 2564256400                  .infmt db "%d%d",0
    50                                  section .bss
    51 00000010 <res 00000008>              .FILE   resq    1   ; временное хранение указателя на файл
    52 00000018 <res 00000008>              .pfrac  resq    1   ; адрес прямоугольника
    53                                  section .text
    54 00000046 55                      push rbp
    55 00000047 4889E5                  mov rbp, rsp
    56                                  
    57                                      ; Сохранение принятых аргументов
    58 0000004A 48893C25[18000000]          mov     [.pfrac], rdi          ; сохраняется адрес прямоугольника
    59 00000052 48893425[10000000]          mov     [.FILE], rsi          ; сохраняется указатель на файл
    60                                  
    61                                      ; Ввод прямоугольника из файла
    62 0000005A 488B3C25[10000000]          mov     rdi, [.FILE]
    63 00000062 48BE-                       mov     rsi, .infmt         ; Формат - 1-й аргумент
    63 00000064 [0500000000000000] 
    64 0000006C 488B1425[18000000]          mov     rdx, [.pfrac]       ; &x
    65 00000074 488B0C25[18000000]          mov     rcx, [.pfrac]
    66 0000007C 4883C104                    add     rcx, 4              ; &y = &x + 4
    67 00000080 B800000000                  mov     rax, 0              ; нет чисел с плавающей точкой
    68 00000085 E8(00000000)                call    fscanf
    69 0000008A C9                      leave
    70 0000008B C3                      ret
    71                                  
    72                                  
    73                                  global InCoordinates
    74                                  InCoordinates:
    75                                  section .data
    76 0000000A 2564256400                  .infmt db "%d%d",0
    77                                  section .bss
    78 00000020 <res 00000008>              .FILE   resq    1   ; временное хранение указателя на файл
    79 00000028 <res 00000008>              .pcoord  resq    1   ; адрес прямоугольника
    80                                  section .text
    81 0000008C 55                      push rbp
    82 0000008D 4889E5                  mov rbp, rsp
    83                                  
    84                                      ; Сохранение принятых аргументов
    85 00000090 48893C25[28000000]          mov     [.pcoord], rdi          ; сохраняется адрес прямоугольника
    86 00000098 48893425[20000000]          mov     [.FILE], rsi          ; сохраняется указатель на файл
    87                                  
    88                                      ; Ввод прямоугольника из файла
    89 000000A0 488B3C25[20000000]          mov     rdi, [.FILE]
    90 000000A8 48BE-                       mov     rsi, .infmt         ; Формат - 1-й аргумент
    90 000000AA [0A00000000000000] 
    91 000000B2 488B1425[28000000]          mov     rdx, [.pcoord]       ; &x
    92 000000BA 488B0C25[28000000]          mov     rcx, [.pcoord]
    93 000000C2 4883C104                    add     rcx, 4              ; &y = &x + 4
    94 000000C6 B800000000                  mov     rax, 0              ; нет чисел с плавающей точкой
    95 000000CB E8(00000000)                call    fscanf
    96 000000D0 C9                      leave
    97 000000D1 C3                      ret
    98                                  
    99                                  ; // Ввод параметров обобщенной фигуры из файла
   100                                  ; int InShape(void *s, FILE *ifst) {
   101                                  ;     int k;
   102                                  ;     fscanf(ifst, "%d", &k);
   103                                  ;     switch(k) {
   104                                  ;         case 1:
   105                                  ;             *((int*)s) = RECTANGLE;
   106                                  ;             InRectangle(s+intSize, ifst);
   107                                  ;             return 1;
   108                                  ;         case 2:
   109                                  ;             *((int*)s) = TRIANGLE;
   110                                  ;             InTriangle(s+intSize, ifst);
   111                                  ;             return 1;
   112                                  ;         default:
   113                                  ;             return 0;
   114                                  ;     }
   115                                  ; }
   116                                  global InNumber
   117                                  InNumber:
   118                                  section .data
   119 0000000F 256400                      .tagFormat   db      "%d",0
   120 00000012 5461672069733A2025-         .tagOutFmt   db     "Tag is: %d",10,0
   120 0000001B 640A00             
   121                                  section .bss
   122 00000030 <res 00000008>              .FILE       resq    1   ; временное хранение указателя на файл
   123 00000038 <res 00000008>              .pnum     resq    1   ; адрес фигуры
   124 00000040 <res 00000004>              .shapeTag   resd    1   ; признак фигуры
   125                                  section .text
   126 000000D2 55                      push rbp
   127 000000D3 4889E5                  mov rbp, rsp
   128                                  
   129                                      ; Сохранение принятых аргументов
   130 000000D6 48893C25[38000000]          mov     [.pnum], rdi          ; сохраняется адрес фигуры
   131 000000DE 48893425[30000000]          mov     [.FILE], rsi            ; сохраняется указатель на файл
   132                                  
   133                                      ; чтение признака фигуры и его обработка
   134 000000E6 488B3C25[30000000]          mov     rdi, [.FILE]
   135 000000EE 48BE-                       mov     rsi, .tagFormat
   135 000000F0 [0F00000000000000] 
   136 000000F8 488B1425[38000000]          mov     rdx, [.pnum]      ; адрес начала фигуры (ее признак)
   137 00000100 4831C0                      xor     rax, rax            ; нет чисел с плавающей точкой
   138 00000103 E8(00000000)                call    fscanf
   139                                  
   140                                      ; Тестовый вывод признака фигуры
   141                                  ;     mov     rdi, .tagOutFmt
   142                                  ;     mov     rax, [.pshape]
   143                                  ;     mov     esi, [rax]
   144                                  ;     call    printf
   145                                  
   146 00000108 488B0C25[38000000]          mov rcx, [.pnum]          ; загрузка адреса начала фигуры
   147 00000110 8B01                        mov eax, [rcx]              ; и получение прочитанного признака
   148 00000112 3B0425[00000000]            cmp eax, [COMPLEXNUMBER]
   149 00000119 7416                        je .compIn
   150 0000011B 3B0425[00000000]            cmp eax, [FRACTION]
   151 00000122 742D                        je .fracIn
   152 00000124 3B0425[00000000]            cmp eax, [COORDINATES]
   153 0000012B 7442                        je .coordIn
   154 0000012D 31C0                        xor eax, eax    ; Некорректный признак - обнуление кода возврата
   155 0000012F EB5C                        jmp     .return
   156                                  .compIn:
   157                                      ; Ввод прямоугольника
   158 00000131 488B3C25[38000000]          mov     rdi, [.pnum]
   159 00000139 4883C704                    add     rdi, 4
   160 0000013D 488B3425[30000000]          mov     rsi, [.FILE]
   161 00000145 E8B6FEFFFF                  call    InComplexNumber
   162 0000014A B801000000                  mov     rax, 1  ; Код возврата - true
   163 0000014F EB3C                        jmp     .return
   164                                  .fracIn:
   165                                      ; Ввод треугольника
   166 00000151 488B3C25[38000000]          mov     rdi, [.pnum]
   167 00000159 4883C704                    add     rdi, 4
   168 0000015D 488B3425[30000000]          mov     rsi, [.FILE]
   169 00000165 E8DCFEFFFF                  call    InFraction
   170 0000016A B801000000                  mov     rax, 1  ; Код возврата - true
   171                                  .coordIn:
   172                                      ; Ввод треугольника
   173 0000016F 488B3C25[38000000]          mov     rdi, [.pnum]
   174 00000177 4883C704                    add     rdi, 4
   175 0000017B 488B3425[30000000]          mov     rsi, [.FILE]
   176 00000183 E804FFFFFF                  call    InCoordinates
   177 00000188 B801000000                  mov     rax, 1  ; Код возврата - true
   178                                  .return:
   179                                  
   180 0000018D C9                      leave
   181 0000018E C3                      ret
   182                                  
   183                                  ; // Ввод содержимого контейнера из указанного файла
   184                                  ; void InContainer(void *c, int *len, FILE *ifst) {
   185                                  ;     void *tmp = c;
   186                                  ;     while(!feof(ifst)) {
   187                                  ;         if(InShape(tmp, ifst)) {
   188                                  ;             tmp = tmp + shapeSize;
   189                                  ;             (*len)++;
   190                                  ;         }
   191                                  ;     }
   192                                  ; }
   193                                  global InContainer
   194                                  InContainer:
   195                                  section .bss
   196 00000044 <res 00000008>              .pcont  resq    1   ; адрес контейнера
   197 0000004C <res 00000008>              .plen   resq    1   ; адрес для сохранения числа введенных элементов
   198 00000054 <res 00000008>              .FILE   resq    1   ; указатель на файл
   199                                  section .text
   200 0000018F 55                      push rbp
   201 00000190 4889E5                  mov rbp, rsp
   202                                  
   203 00000193 48893C25[44000000]          mov [.pcont], rdi   ; сохраняется указатель на контейнер
   204 0000019B 48893425[4C000000]          mov [.plen], rsi    ; сохраняется указатель на длину
   205 000001A3 48891425[54000000]          mov [.FILE], rdx    ; сохраняется указатель на файл
   206                                      ; В rdi адрес начала контейнера
   207 000001AB 4831DB                      xor rbx, rbx        ; число фигур = 0
   208 000001AE 4889D6                      mov rsi, rdx        ; перенос указателя на файл
   209                                  .loop:
   210                                      ; сохранение рабочих регистров
   211 000001B1 57                          push rdi
   212 000001B2 53                          push rbx
   213                                  
   214 000001B3 488B3425[54000000]          mov     rsi, [.FILE]
   215 000001BB B800000000                  mov     rax, 0      ; нет чисел с плавающей точкой
   216 000001C0 E80DFFFFFF                  call    InNumber     ; ввод фигуры
   217 000001C5 4883F800                    cmp rax, 0          ; проверка успешности ввода
   218 000001C9 7E0B                        jle  .return        ; выход, если признак меньше или равен 0
   219                                  
   220 000001CB 5B                          pop rbx
   221 000001CC 48FFC3                      inc rbx
   222                                  
   223 000001CF 5F                          pop rdi
   224 000001D0 4883C710                    add rdi, 16             ; адрес следующей фигуры
   225                                  
   226 000001D4 EBDB                        jmp .loop
   227                                  .return:
   228 000001D6 488B0425[4C000000]          mov rax, [.plen]    ; перенос указателя на длину
   229 000001DE 8918                        mov [rax], ebx      ; занесение длины
   230 000001E0 C9                      leave
   231 000001E1 C3                      ret
   232                                  
