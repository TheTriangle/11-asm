     1                                  ; file.asm - использование файлов в NASM
     2                                  extern printf
     3                                  extern fscanf
     4                                  
     5                                  extern COMPLEXNUMBER
     6                                  extern FRACTION
     7                                  extern COORDINATES
     8                                  
     9                                  global InComplexNumber
    10                                  InComplexNumber:
    11                                  section .data
    12 00000000 2564256400                  .infmt db "%d%d",0
    13                                  section .bss
    14 00000000 <res 00000008>              .FILE   resq    1   ; временное хранение указателя на файл
    15 00000008 <res 00000008>              .pcomp  resq    1  
    16                                  section .text
    17 00000000 55                      push rbp
    18 00000001 4889E5                  mov rbp, rsp
    19                                  
    20                                      ; Сохранение принятых аргументов
    21 00000004 48893C25[08000000]          mov     [.pcomp], rdi         
    22 0000000C 48893425[00000000]          mov     [.FILE], rsi          ; сохраняется указатель на файл
    23                                  
    24 00000014 488B3C25[00000000]          mov     rdi, [.FILE]
    25 0000001C 48BE-                       mov     rsi, .infmt         ; Формат - 1-й аргумент
    25 0000001E [0000000000000000] 
    26 00000026 488B1425[08000000]          mov     rdx, [.pcomp]       ; &x
    27 0000002E 488B0C25[08000000]          mov     rcx, [.pcomp]
    28 00000036 4883C104                    add     rcx, 4              ; &y = &x + 4
    29 0000003A B800000000                  mov     rax, 0              ; нет чисел с плавающей точкой
    30 0000003F E8(00000000)                call    fscanf
    31                                  
    32 00000044 C9                      leave
    33 00000045 C3                      ret
    34                                  
    35                                  
    36                                  global InFraction
    37                                  InFraction:
    38                                  section .data
    39 00000005 2564256400                  .infmt db "%d%d",0
    40                                  section .bss
    41 00000010 <res 00000008>              .FILE   resq    1   ; временное хранение указателя на файл
    42 00000018 <res 00000008>              .pfrac  resq    1   
    43                                  section .text
    44 00000046 55                      push rbp
    45 00000047 4889E5                  mov rbp, rsp
    46                                  
    47                                      ; Сохранение принятых аргументов
    48 0000004A 48893C25[18000000]          mov     [.pfrac], rdi         
    49 00000052 48893425[10000000]          mov     [.FILE], rsi          ; сохраняется указатель на файл
    50                                  
    51 0000005A 488B3C25[10000000]          mov     rdi, [.FILE]
    52 00000062 48BE-                       mov     rsi, .infmt         ; Формат - 1-й аргумент
    52 00000064 [0500000000000000] 
    53 0000006C 488B1425[18000000]          mov     rdx, [.pfrac]       ; &x
    54 00000074 488B0C25[18000000]          mov     rcx, [.pfrac]
    55 0000007C 4883C104                    add     rcx, 4              ; &y = &x + 4
    56 00000080 B800000000                  mov     rax, 0              ; нет чисел с плавающей точкой
    57 00000085 E8(00000000)                call    fscanf
    58                                  
    59 0000008A 4883F900                    cmp rcx, 0
    60 0000008E 7402                        je arequal
    61 00000090 EB05                        jmp return
    62                                  
    63                                      arequal:
    64 00000092 B901000000                  mov rcx, 1
    65                                      return:
    66                                  
    67 00000097 C9                      leave
    68 00000098 C3                      ret
    69                                  
    70                                  
    71                                  global InCoordinates
    72                                  InCoordinates:
    73                                  section .data
    74 0000000A 2564256400                  .infmt db "%d%d",0
    75                                  section .bss
    76 00000020 <res 00000008>              .FILE   resq    1   ; временное хранение указателя на файл
    77 00000028 <res 00000008>              .pcoord  resq    1  
    78                                  section .text
    79 00000099 55                      push rbp
    80 0000009A 4889E5                  mov rbp, rsp
    81                                  
    82                                      ; Сохранение принятых аргументов
    83 0000009D 48893C25[28000000]          mov     [.pcoord], rdi         
    84 000000A5 48893425[20000000]          mov     [.FILE], rsi          ; сохраняется указатель на файл
    85                                  
    86                                  
    87 000000AD 488B3C25[20000000]          mov     rdi, [.FILE]
    88 000000B5 48BE-                       mov     rsi, .infmt         ; Формат - 1-й аргумент
    88 000000B7 [0A00000000000000] 
    89 000000BF 488B1425[28000000]          mov     rdx, [.pcoord]       ; &x
    90 000000C7 488B0C25[28000000]          mov     rcx, [.pcoord]
    91 000000CF 4883C104                    add     rcx, 4              ; &y = &x + 4
    92 000000D3 B800000000                  mov     rax, 0              ; нет чисел с плавающей точкой
    93 000000D8 E8(00000000)                call    fscanf
    94 000000DD C9                      leave
    95 000000DE C3                      ret
    96                                  
    97                                  
    98                                  global InNumber
    99                                  InNumber:
   100                                  section .data
   101 0000000F 256400                      .tagFormat   db      "%d",0
   102 00000012 5461672069733A2025-         .tagOutFmt   db     "Tag is: %d",10,0
   102 0000001B 640A00             
   103                                  section .bss
   104 00000030 <res 00000008>              .FILE       resq    1   ; временное хранение указателя на файл
   105 00000038 <res 00000008>              .pnum     resq    1   ; адрес фиуры
   106 00000040 <res 00000004>              .shapeTag   resd    1   ; признак 
   107                                  section .text
   108 000000DF 55                      push rbp
   109 000000E0 4889E5                  mov rbp, rsp
   110                                  
   111                                      ; Сохранение принятых аргументов
   112 000000E3 48893C25[38000000]          mov     [.pnum], rdi          ; сохраняется адрес 
   113 000000EB 48893425[30000000]          mov     [.FILE], rsi            ; сохраняется указатель на файл
   114                                  
   115                                      ; чтение признака и его обработка
   116 000000F3 488B3C25[30000000]          mov     rdi, [.FILE]
   117 000000FB 48BE-                       mov     rsi, .tagFormat
   117 000000FD [0F00000000000000] 
   118 00000105 488B1425[38000000]          mov     rdx, [.pnum]      ; адрес начала (признак)
   119 0000010D 4831C0                      xor     rax, rax            ; нет чисел с плавающей точкой
   120 00000110 E8(00000000)                call    fscanf
   121                                  
   122                                  
   123 00000115 488B0C25[38000000]          mov rcx, [.pnum]          ; загрузка адреса начала 
   124 0000011D 8B01                        mov eax, [rcx]              ; и получение прочитанного признака
   125 0000011F 3B0425[00000000]            cmp eax, [COMPLEXNUMBER]
   126 00000126 7416                        je .compIn
   127 00000128 3B0425[00000000]            cmp eax, [FRACTION]
   128 0000012F 742D                        je .fracIn
   129 00000131 3B0425[00000000]            cmp eax, [COORDINATES]
   130 00000138 7444                        je .coordIn
   131 0000013A 31C0                        xor eax, eax    ; Некорректный признак - обнуление кода возврата
   132 0000013C EB60                        jmp     .return
   133                                  .compIn:
   134                                      ; Ввод
   135 0000013E 488B3C25[38000000]          mov     rdi, [.pnum]
   136 00000146 4883C704                    add     rdi, 4
   137 0000014A 488B3425[30000000]          mov     rsi, [.FILE]
   138 00000152 E8A9FEFFFF                  call    InComplexNumber
   139 00000157 B801000000                  mov     rax, 1  ; Код возврата - true
   140 0000015C EB40                        jmp     .return
   141                                  .fracIn:
   142                                      ; Ввод 
   143 0000015E 488B3C25[38000000]          mov     rdi, [.pnum]
   144 00000166 4883C704                    add     rdi, 4
   145 0000016A 488B3425[30000000]          mov     rsi, [.FILE]
   146                                  
   147 00000172 E8CFFEFFFF                  call    InFraction
   148 00000177 B801000000                  mov     rax, 1  ; Код возврата - true
   149 0000017C EB20                        jmp     .return
   150                                  .coordIn:
   151                                      ; Ввод 
   152 0000017E 488B3C25[38000000]          mov     rdi, [.pnum]
   153 00000186 4883C704                    add     rdi, 4
   154 0000018A 488B3425[30000000]          mov     rsi, [.FILE]
   155 00000192 E802FFFFFF                  call    InCoordinates
   156 00000197 B801000000                  mov     rax, 1  ; Код возврата - true
   157 0000019C EB00                        jmp     .return
   158                                  .return:
   159                                  
   160 0000019E C9                      leave
   161 0000019F C3                      ret
   162                                  
   163                                  
   164                                  global InContainer
   165                                  InContainer:
   166                                  section .bss
   167 00000044 <res 00000008>              .pcont  resq    1   ; адрес контейнера
   168 0000004C <res 00000008>              .plen   resq    1   ; адрес для сохранения числа введенных элементов
   169 00000054 <res 00000008>              .FILE   resq    1   ; указатель на файл
   170                                  section .text
   171 000001A0 55                      push rbp
   172 000001A1 4889E5                  mov rbp, rsp
   173                                  
   174 000001A4 48893C25[44000000]          mov [.pcont], rdi   ; сохраняется указатель на контейнер
   175 000001AC 48893425[4C000000]          mov [.plen], rsi    ; сохраняется указатель на длину
   176 000001B4 48891425[54000000]          mov [.FILE], rdx    ; сохраняется указатель на файл
   177                                      ; В rdi адрес начала контейнера
   178 000001BC 4831DB                      xor rbx, rbx        ; число чисел = 0
   179 000001BF 4889D6                      mov rsi, rdx        ; перенос указателя на файл
   180                                  .loop:
   181                                      ; сохранение рабочих регистров
   182 000001C2 57                          push rdi
   183 000001C3 53                          push rbx
   184                                  
   185 000001C4 488B3425[54000000]          mov     rsi, [.FILE]
   186 000001CC B800000000                  mov     rax, 0      ; нет чисел с плавающей точкой
   187 000001D1 E809FFFFFF                  call    InNumber     ; ввод
   188 000001D6 4883F800                    cmp rax, 0          ; проверка успешности ввода
   189 000001DA 7E0B                        jle  .return        ; выход, если признак меньше или равен 0
   190                                  
   191 000001DC 5B                          pop rbx
   192 000001DD 48FFC3                      inc rbx
   193                                  
   194 000001E0 5F                          pop rdi
   195 000001E1 4883C710                    add rdi, 16          
   196                                  
   197 000001E5 EBDB                        jmp .loop
   198                                  .return:
   199 000001E7 488B0425[4C000000]          mov rax, [.plen]    ; перенос указателя на длину
   200 000001EF 8918                        mov [rax], ebx      ; занесение длины
   201 000001F1 C9                      leave
   202 000001F2 C3                      ret
   203                                  
