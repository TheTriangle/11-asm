     1                                  extern ToRealNumber
     2                                  extern stdout
     3                                  extern OutNumber
     4                                  extern OutComplexNumber
     5                                  extern ToRealComplexNumber
     6                                  %include "printmacros.mac"
     1                              <1> extern  fprintf
     2                              <1> extern  OutContainer
     3                              <1> 
     4                              <1> ;-------------------------------------------------------------
     5                              <1> ; Вывод строки, передаваемой непосредственно макросу
     6                              <1> ; с переводом на следующую строку
     7                              <1> %macro  PrintStr2    2
     8                              <1>     section .data
     9                              <1>         %%arg1  db  %1,10,0     ; first argument
    10                              <1>     section .text               ; the printf arguments
    11                              <1>         mov rdi, %2
    12                              <1>         mov rsi, %%arg1
    13                              <1>         mov rax, 0              ; no floating point
    14                              <1>         call fprintf
    15                              <1> %endmacro
    16                              <1> 
    17                              <1> ; Вывод содержимого контейнера
    18                              <1> %macro  PrintContainer2    3
    19                              <1>     mov     rdi, %1
    20                              <1>     mov     esi, %2
    21                              <1>     mov     rdx, %3
    22                              <1>     mov     rax, 0              ; нет чисел с плавающей точкой
    23                              <1>     call    OutContainer
    24                              <1> %endmacro
    25                              <1> 
    26                              <1> %macro  PrintInt2    2
    27                              <1>     section .data
    28                              <1>         %%arg1  db  "%d ",10,0     ; first argument
    29                              <1>     section .text               ; the printf arguments
    30                              <1>         mov rdi, %2
    31                              <1>         mov rsi, %%arg1
    32                              <1>         mov rdx, %1
    33                              <1>         mov rax, 0              ; no floating point
    34                              <1>         call fprintf
    35                              <1> %endmacro
    36                              <1> 
    37                              <1> %macro  PrintDouble2    2
    38                              <1>     section .data
    39                              <1>         %%arg1  db  "%g",0     ; first argument
    40                              <1>     section .text               ; the printf arguments
    41                              <1>         mov rdi, %2
    42                              <1>         mov rsi, %%arg1
    43                              <1>         movsd xmm0, %1
    44                              <1>         mov rax, 1              ; no floating point
    45                              <1>         call fprintf
    46                              <1> %endmacro
     7                                  
     8                                  global BubbleSortContainer2
     9                                  BubbleSortContainer2:
    10                                  section .data
    11 00000000 25643A2000                  numFmt  db  "%d: ",0
    12 00000005 0000000000000000            real dq 0.0
    13                                  section .bss
    14 00000000 <res 00000008>              pcont  resq    1   ; адрес контейнера
    15 00000008 <res 00000004>              len    resd    1   ; адрес для сохранения числа введенных элементов
    16 0000000C <res 00000008>              FILE   resq    1   ; указатель на файл
    17 00000014 <res 00000004>              cntr   resd    1   ; вспомогательный счетчик
    18 00000018 <res 00000004>              cntr2   resd    1   ; вспомогательный счетчик
    19 0000001C <res 00000004>              lptr    resd    1   ; вспомогательный счетчик
    20                                  
    21                                  section .text
    22 00000000 55                      push rbp
    23 00000001 4889E5                  mov rbp, rsp
    24                                  
    25 00000004 48893C25[00000000]          mov [pcont], rdi   ; сохраняется указатель на контейнер
    26                                      ; PrintInt2 rdi, [stdout]
    27                                      
    28 0000000C 893425[08000000]            mov [len],   esi     ; сохраняется число элементов
    29 00000013 48891425[0C000000]          mov [FILE],  rdx    ; сохраняется указатель на файл
    30 0000001B 8A0C25[08000000]        	mov cl, [len]					;set cl with array length
    31 00000022 880C25[14000000]        	mov [cntr], cl					;set this variable with array length
    32                                  
    33                                      PrintStr2 "real0:", [FILE]
    33                              <1>  section .data
    33 0000000D 7265616C303A0A00    <1>  %%arg1 db %1,10,0
    33                              <1>  section .text
    33 00000029 488B3C25[0C000000]  <1>  mov rdi, %2
    33 00000031 48BE-               <1>  mov rsi, %%arg1
    33 00000033 [0D00000000000000]  <1>
    33 0000003B B800000000          <1>  mov rax, 0
    33 00000040 E8(00000000)        <1>  call fprintf
    34 00000045 488B3C25[00000000]          mov rdi, [pcont]
    35 0000004D E8(00000000)                call ToRealNumber     ; Получение периметра первой фигуры
    36                                      
    37                                      PrintStr2 "real:", [FILE]
    37                              <1>  section .data
    37 00000015 7265616C3A0A00      <1>  %%arg1 db %1,10,0
    37                              <1>  section .text
    37 00000052 488B3C25[0C000000]  <1>  mov rdi, %2
    37 0000005A 48BE-               <1>  mov rsi, %%arg1
    37 0000005C [1500000000000000]  <1>
    37 00000064 B800000000          <1>  mov rax, 0
    37 00000069 E8(00000000)        <1>  call fprintf
    38 0000006E F20F110425-                 movsd [real], xmm0
    38 00000073 [05000000]         
    39                                      PrintDouble2 xmm0, [FILE]
    39                              <1>  section .data
    39 0000001C 256700              <1>  %%arg1 db "%g",0
    39                              <1>  section .text
    39 00000077 488B3C25[0C000000]  <1>  mov rdi, %2
    39 0000007F 48BE-               <1>  mov rsi, %%arg1
    39 00000081 [1C00000000000000]  <1>
    39 00000089 F20F10C0            <1>  movsd xmm0, %1
    39 0000008D B801000000          <1>  mov rax, 1
    39 00000092 E8(00000000)        <1>  call fprintf
    40                                      PrintStr2 "rend:", [FILE]
    40                              <1>  section .data
    40 0000001F 72656E643A0A00      <1>  %%arg1 db %1,10,0
    40                              <1>  section .text
    40 00000097 488B3C25[0C000000]  <1>  mov rdi, %2
    40 0000009F 48BE-               <1>  mov rsi, %%arg1
    40 000000A1 [1F00000000000000]  <1>
    40 000000A9 B800000000          <1>  mov rax, 0
    40 000000AE E8(00000000)        <1>  call fprintf
    41                                  
    42 000000B3 488B0425[01000000]          mov rax, [pcont + 1]
    43                                      PrintInt2 rax, [FILE]
    43                              <1>  section .data
    43 00000026 2564200A00          <1>  %%arg1 db "%d ",10,0
    43                              <1>  section .text
    43 000000BB 488B3C25[0C000000]  <1>  mov rdi, %2
    43 000000C3 48BE-               <1>  mov rsi, %%arg1
    43 000000C5 [2600000000000000]  <1>
    43 000000CD 4889C2              <1>  mov rdx, %1
    43 000000D0 B800000000          <1>  mov rax, 0
    43 000000D5 E8(00000000)        <1>  call fprintf
    44                                      PrintStr2 "first:", [FILE]
    44                              <1>  section .data
    44 0000002B 66697273743A0A00    <1>  %%arg1 db %1,10,0
    44                              <1>  section .text
    44 000000DA 488B3C25[0C000000]  <1>  mov rdi, %2
    44 000000E2 48BE-               <1>  mov rsi, %%arg1
    44 000000E4 [2B00000000000000]  <1>
    44 000000EC B800000000          <1>  mov rax, 0
    44 000000F1 E8(00000000)        <1>  call fprintf
    45                                      PrintInt2 [pcont + 1], [FILE]
    45                              <1>  section .data
    45 00000033 2564200A00          <1>  %%arg1 db "%d ",10,0
    45                              <1>  section .text
    45 000000F6 488B3C25[0C000000]  <1>  mov rdi, %2
    45 000000FE 48BE-               <1>  mov rsi, %%arg1
    45 00000100 [3300000000000000]  <1>
    45 00000108 488B1425[01000000]  <1>  mov rdx, %1
    45 00000110 B800000000          <1>  mov rax, 0
    45 00000115 E8(00000000)        <1>  call fprintf
    46                                      PrintStr2 "second:", [FILE]
    46                              <1>  section .data
    46 00000038 7365636F6E643A0A00  <1>  %%arg1 db %1,10,0
    46                              <1>  section .text
    46 0000011A 488B3C25[0C000000]  <1>  mov rdi, %2
    46 00000122 48BE-               <1>  mov rsi, %%arg1
    46 00000124 [3800000000000000]  <1>
    46 0000012C B800000000          <1>  mov rax, 0
    46 00000131 E8(00000000)        <1>  call fprintf
    47                                      PrintInt2 [pcont + 2], [FILE]
    47                              <1>  section .data
    47 00000041 2564200A00          <1>  %%arg1 db "%d ",10,0
    47                              <1>  section .text
    47 00000136 488B3C25[0C000000]  <1>  mov rdi, %2
    47 0000013E 48BE-               <1>  mov rsi, %%arg1
    47 00000140 [4100000000000000]  <1>
    47 00000148 488B1425[02000000]  <1>  mov rdx, %1
    47 00000150 B800000000          <1>  mov rax, 0
    47 00000155 E8(00000000)        <1>  call fprintf
    48                                      PrintStr2 "entered:", [FILE]
    48                              <1>  section .data
    48 00000046 656E74657265643A0A- <1>  %%arg1 db %1,10,0
    48 0000004F 00                  <1>
    48                              <1>  section .text
    48 0000015A 488B3C25[0C000000]  <1>  mov rdi, %2
    48 00000162 48BE-               <1>  mov rsi, %%arg1
    48 00000164 [4600000000000000]  <1>
    48 0000016C B800000000          <1>  mov rax, 0
    48 00000171 E8(00000000)        <1>  call fprintf
    49                                      
    50                                      up1 :
    51 00000176 488B3C25[01000000]      	mov rdi, [pcont + 1]						;Points to start
    52 0000017E 8A0425[14000000]        	mov al, [cntr]					;
    53 00000185 8A1C25[1C000000]        	mov bl, [lptr]
    54 0000018C 28D8                    	sub al, bl						; n-i (Rather to increase i, Decrements n)
    55 0000018E 880425[18000000]        	mov [cntr2], al					; j pointer in bubble sort
    56                                  
    57                                      PrintStr2 "entered 2", [FILE]
    57                              <1>  section .data
    57 00000050 656E74657265642032- <1>  %%arg1 db %1,10,0
    57 00000059 0A00                <1>
    57                              <1>  section .text
    57 00000195 488B3C25[0C000000]  <1>  mov rdi, %2
    57 0000019D 48BE-               <1>  mov rsi, %%arg1
    57 0000019F [5000000000000000]  <1>
    57 000001A7 B800000000          <1>  mov rax, 0
    57 000001AC E8(00000000)        <1>  call fprintf
    58                                      PrintContainer2 [pcont], [len], [FILE]
    58 000001B1 488B3C25[00000000]  <1>  mov rdi, %1
    58 000001B9 8B3425[08000000]    <1>  mov esi, %2
    58 000001C0 488B1425[0C000000]  <1>  mov rdx, %3
    58 000001C8 B800000000          <1>  mov rax, 0
    58 000001CD E8(00000000)        <1>  call OutContainer
    59                                  
    60                                  	up2:
    61                                          PrintStr2 "entered 3", [FILE]
    61                              <1>  section .data
    61 0000005B 656E74657265642033- <1>  %%arg1 db %1,10,0
    61 00000064 0A00                <1>
    61                              <1>  section .text
    61 000001D2 488B3C25[0C000000]  <1>  mov rdi, %2
    61 000001DA 48BE-               <1>  mov rsi, %%arg1
    61 000001DC [5B00000000000000]  <1>
    61 000001E4 B800000000          <1>  mov rax, 0
    61 000001E9 E8(00000000)        <1>  call fprintf
    62                                          PrintContainer2 [pcont], [len], [FILE]
    62 000001EE 488B3C25[00000000]  <1>  mov rdi, %1
    62 000001F6 8B3425[08000000]    <1>  mov esi, %2
    62 000001FD 488B1425[0C000000]  <1>  mov rdx, %3
    62 00000205 B800000000          <1>  mov rax, 0
    62 0000020A E8(00000000)        <1>  call OutContainer
    63                                          PrintInt2 [pcont], [FILE]
    63                              <1>  section .data
    63 00000066 2564200A00          <1>  %%arg1 db "%d ",10,0
    63                              <1>  section .text
    63 0000020F 488B3C25[0C000000]  <1>  mov rdi, %2
    63 00000217 48BE-               <1>  mov rsi, %%arg1
    63 00000219 [6600000000000000]  <1>
    63 00000221 488B1425[00000000]  <1>  mov rdx, %1
    63 00000229 B800000000          <1>  mov rax, 0
    63 0000022E E8(00000000)        <1>  call fprintf
    64                                          ; PrintInt2 [pcont+1], [FILE]
    65                                  
    66 00000233 8A07                    		mov al, [rdi]				;Get [j] in al
    67 00000235 8A5F01                  		mov bl, [rdi+1]			;Get [j+1]in bl
    68 00000238 38D8                    		cmp al, bl
    69 0000023A 7205                    		jb skip						;Compares
    70 0000023C 884701                  		mov [rdi+1], al					;If larger swapped
    71 0000023F 881F                    		mov [rdi], bl
    72                                  		skip:
    73                                              PrintStr2 "entered skip", [FILE]
    73                              <1>  section .data
    73 0000006B 656E74657265642073- <1>  %%arg1 db %1,10,0
    73 00000074 6B69700A00          <1>
    73                              <1>  section .text
    73 00000241 488B3C25[0C000000]  <1>  mov rdi, %2
    73 00000249 48BE-               <1>  mov rsi, %%arg1
    73 0000024B [6B00000000000000]  <1>
    73 00000253 B800000000          <1>  mov rax, 0
    73 00000258 E8(00000000)        <1>  call fprintf
    74 0000025D 4883C701                		    add rdi, 1			;Else continues to next number
    75 00000261 802C25[18000000]01      		    sub byte[cntr2], 1
    76 00000269 0F8563FFFFFF            		    jnz up2
    77                                  			
    78 0000026F 802C25[14000000]01      	sub byte[cntr], 1						;Decrements n (Rather to increase i)
    79 00000277 0F85F9FEFFFF            	jnz up1
    80 0000027D C3                      	ret
