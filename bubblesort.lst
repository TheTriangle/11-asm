     1                                  extern ToRealNumber
     2                                  extern stdout
     3                                  extern OutNumber
     4                                  extern OutComplexNumber
     5                                  extern ToRealComplexNumber
     6                                  %include "printmacros.mac" 
     1                              <1> extern  fprintf
     2                              <1> extern  OutContainer
     3                              <1> 
     4                              <1> ;-------------------------------------------------------------
     5                              <1> ; Вывод строки, передаваемой непосредственно макросу
     6                              <1> ; с переводом на следующую строку
     7                              <1> %macro  PrintStr2    2
     8                              <1>     section .data
     9                              <1>         %%arg1  db  %1,10,0     ; first argument
    10                              <1>     section .text               ; the printf arguments
    11                              <1>         mov rdi, %2
    12                              <1>         mov rsi, %%arg1
    13                              <1>         mov rax, 0              ; no floating point
    14                              <1>         call fprintf
    15                              <1> %endmacro
    16                              <1> 
    17                              <1> ; Вывод содержимого контейнера
    18                              <1> %macro  PrintContainer2    3
    19                              <1>     mov     rdi, %1
    20                              <1>     mov     esi, %2
    21                              <1>     mov     rdx, %3
    22                              <1>     mov     rax, 0              ; нет чисел с плавающей точкой
    23                              <1>     call    OutContainer
    24                              <1> %endmacro
    25                              <1> 
    26                              <1> %macro  PrintInt2    2
    27                              <1>     section .data
    28                              <1>         %%arg1  db  "%d ",10,0     ; first argument
    29                              <1>     section .text               ; the printf arguments
    30                              <1>         mov rdi, %2
    31                              <1>         mov rsi, %%arg1
    32                              <1>         mov rdx, %1
    33                              <1>         mov rax, 0              ; no floating point
    34                              <1>         call fprintf
    35                              <1> %endmacro
    36                              <1> 
    37                              <1> %macro  PrintDouble2    2
    38                              <1>     section .data
    39                              <1>         %%arg1  db  "%g",0     ; first argument
    40                              <1>     section .text               ; the printf arguments
    41                              <1>         mov rdi, %2
    42                              <1>         mov rsi, %%arg1
    43                              <1>         movsd xmm0, %1
    44                              <1>         mov rax, 1              ; no floating point
    45                              <1>         call fprintf
    46                              <1> %endmacro
     7                                  ; макросы для отладки
     8                                  
     9                                  ; вызывается макросом SortContainer2 (macros.mac) из main.asm
    10                                  global BubbleSortContainer2
    11                                  BubbleSortContainer2:
    12                                  section .data
    13 00000000 25643A2000                  numFmt  db  "%d: ",0
    14 00000005 0000000000000000            real dq 0.0
    15                                  section .bss
    16 00000000 <res 00000008>              pcont  resq    1   ; адрес контейнера
    17 00000008 <res 00000004>              len    resd    1   ; адрес для сохранения числа введенных элементов
    18 0000000C <res 00000008>              FILE   resq    1   ; указатель на файл
    19 00000014 <res 00000004>              cntr   resd    1   ; вспомогательный счетчик
    20 00000018 <res 00000004>              cntr2   resd    1   ; вспомогательный счетчик
    21 0000001C <res 00000004>              lptr    resd    1   ; вспомогательный счетчик
    22                                  
    23                                  section .text
    24 00000000 55                      push rbp
    25 00000001 4889E5                  mov rbp, rsp
    26                                  
    27 00000004 48893C25[00000000]          mov [pcont], rdi   ; сохраняется указатель на контейнер
    28                                      ; PrintInt2 rdi, [stdout]
    29                                      
    30 0000000C 893425[08000000]            mov [len],   esi     ; сохраняется число элементов
    31 00000013 48891425[0C000000]          mov [FILE],  rdx    ; сохраняется указатель на файл
    32 0000001B 8A0C25[08000000]        	mov cl, [len]					;set cl with array length
    33 00000022 880C25[14000000]        	mov [cntr], cl					;set this variable with array length
    34                                  
    35                                      PrintStr2 "real0:", [FILE]
    35                              <1>  section .data
    35 0000000D 7265616C303A0A00    <1>  %%arg1 db %1,10,0
    35                              <1>  section .text
    35 00000029 488B3C25[0C000000]  <1>  mov rdi, %2
    35 00000031 48BE-               <1>  mov rsi, %%arg1
    35 00000033 [0D00000000000000]  <1>
    35 0000003B B800000000          <1>  mov rax, 0
    35 00000040 E8(00000000)        <1>  call fprintf
    36 00000045 488B3C25[00000000]          mov rdi, [pcont]
    37 0000004D E8(00000000)                call ToRealNumber     ; Получение периметра первой фигуры
    38                                      
    39                                      PrintStr2 "real:", [FILE]
    39                              <1>  section .data
    39 00000015 7265616C3A0A00      <1>  %%arg1 db %1,10,0
    39                              <1>  section .text
    39 00000052 488B3C25[0C000000]  <1>  mov rdi, %2
    39 0000005A 48BE-               <1>  mov rsi, %%arg1
    39 0000005C [1500000000000000]  <1>
    39 00000064 B800000000          <1>  mov rax, 0
    39 00000069 E8(00000000)        <1>  call fprintf
    40 0000006E F20F110425-                 movsd [real], xmm0
    40 00000073 [05000000]         
    41                                      PrintDouble2 xmm0, [FILE] ; Как видим, это не работает
    41                              <1>  section .data
    41 0000001C 256700              <1>  %%arg1 db "%g",0
    41                              <1>  section .text
    41 00000077 488B3C25[0C000000]  <1>  mov rdi, %2
    41 0000007F 48BE-               <1>  mov rsi, %%arg1
    41 00000081 [1C00000000000000]  <1>
    41 00000089 F20F10C0            <1>  movsd xmm0, %1
    41 0000008D B801000000          <1>  mov rax, 1
    41 00000092 E8(00000000)        <1>  call fprintf
    42                                      PrintStr2 "rend:", [FILE]
    42                              <1>  section .data
    42 0000001F 72656E643A0A00      <1>  %%arg1 db %1,10,0
    42                              <1>  section .text
    42 00000097 488B3C25[0C000000]  <1>  mov rdi, %2
    42 0000009F 48BE-               <1>  mov rsi, %%arg1
    42 000000A1 [1F00000000000000]  <1>
    42 000000A9 B800000000          <1>  mov rax, 0
    42 000000AE E8(00000000)        <1>  call fprintf
    43                                  
    44 000000B3 488B0425[01000000]          mov rax, [pcont + 1]
    45                                      PrintInt2 rax, [FILE]
    45                              <1>  section .data
    45 00000026 2564200A00          <1>  %%arg1 db "%d ",10,0
    45                              <1>  section .text
    45 000000BB 488B3C25[0C000000]  <1>  mov rdi, %2
    45 000000C3 48BE-               <1>  mov rsi, %%arg1
    45 000000C5 [2600000000000000]  <1>
    45 000000CD 4889C2              <1>  mov rdx, %1
    45 000000D0 B800000000          <1>  mov rax, 0
    45 000000D5 E8(00000000)        <1>  call fprintf
    46                                      PrintStr2 "first:", [FILE]
    46                              <1>  section .data
    46 0000002B 66697273743A0A00    <1>  %%arg1 db %1,10,0
    46                              <1>  section .text
    46 000000DA 488B3C25[0C000000]  <1>  mov rdi, %2
    46 000000E2 48BE-               <1>  mov rsi, %%arg1
    46 000000E4 [2B00000000000000]  <1>
    46 000000EC B800000000          <1>  mov rax, 0
    46 000000F1 E8(00000000)        <1>  call fprintf
    47                                      PrintInt2 [pcont + 1], [FILE]
    47                              <1>  section .data
    47 00000033 2564200A00          <1>  %%arg1 db "%d ",10,0
    47                              <1>  section .text
    47 000000F6 488B3C25[0C000000]  <1>  mov rdi, %2
    47 000000FE 48BE-               <1>  mov rsi, %%arg1
    47 00000100 [3300000000000000]  <1>
    47 00000108 488B1425[01000000]  <1>  mov rdx, %1
    47 00000110 B800000000          <1>  mov rax, 0
    47 00000115 E8(00000000)        <1>  call fprintf
    48                                      PrintStr2 "second:", [FILE]
    48                              <1>  section .data
    48 00000038 7365636F6E643A0A00  <1>  %%arg1 db %1,10,0
    48                              <1>  section .text
    48 0000011A 488B3C25[0C000000]  <1>  mov rdi, %2
    48 00000122 48BE-               <1>  mov rsi, %%arg1
    48 00000124 [3800000000000000]  <1>
    48 0000012C B800000000          <1>  mov rax, 0
    48 00000131 E8(00000000)        <1>  call fprintf
    49                                      PrintInt2 [pcont + 2], [FILE]
    49                              <1>  section .data
    49 00000041 2564200A00          <1>  %%arg1 db "%d ",10,0
    49                              <1>  section .text
    49 00000136 488B3C25[0C000000]  <1>  mov rdi, %2
    49 0000013E 48BE-               <1>  mov rsi, %%arg1
    49 00000140 [4100000000000000]  <1>
    49 00000148 488B1425[02000000]  <1>  mov rdx, %1
    49 00000150 B800000000          <1>  mov rax, 0
    49 00000155 E8(00000000)        <1>  call fprintf
    50                                      PrintStr2 "entered:", [FILE]
    50                              <1>  section .data
    50 00000046 656E74657265643A0A- <1>  %%arg1 db %1,10,0
    50 0000004F 00                  <1>
    50                              <1>  section .text
    50 0000015A 488B3C25[0C000000]  <1>  mov rdi, %2
    50 00000162 48BE-               <1>  mov rsi, %%arg1
    50 00000164 [4600000000000000]  <1>
    50 0000016C B800000000          <1>  mov rax, 0
    50 00000171 E8(00000000)        <1>  call fprintf
    51                                      
    52                                      up1 :
    53 00000176 488B3C25[01000000]      	mov rdi, [pcont + 1]		; Если +1 это биты, то должно указывать на тип переменной				;Points to start
    54 0000017E 8A0425[14000000]        	mov al, [cntr]					;
    55 00000185 8A1C25[1C000000]        	mov bl, [lptr]
    56 0000018C 28D8                    	sub al, bl						; n-i (Rather to increase i, Decrements n)
    57 0000018E 880425[18000000]        	mov [cntr2], al					; j pointer in bubble sort
    58                                  
    59                                      PrintStr2 "entered 2", [FILE]
    59                              <1>  section .data
    59 00000050 656E74657265642032- <1>  %%arg1 db %1,10,0
    59 00000059 0A00                <1>
    59                              <1>  section .text
    59 00000195 488B3C25[0C000000]  <1>  mov rdi, %2
    59 0000019D 48BE-               <1>  mov rsi, %%arg1
    59 0000019F [5000000000000000]  <1>
    59 000001A7 B800000000          <1>  mov rax, 0
    59 000001AC E8(00000000)        <1>  call fprintf
    60                                      PrintContainer2 [pcont], [len], [FILE]
    60 000001B1 488B3C25[00000000]  <1>  mov rdi, %1
    60 000001B9 8B3425[08000000]    <1>  mov esi, %2
    60 000001C0 488B1425[0C000000]  <1>  mov rdx, %3
    60 000001C8 B800000000          <1>  mov rax, 0
    60 000001CD E8(00000000)        <1>  call OutContainer
    61                                  
    62                                  	up2:
    63                                          PrintStr2 "entered 3", [FILE]
    63                              <1>  section .data
    63 0000005B 656E74657265642033- <1>  %%arg1 db %1,10,0
    63 00000064 0A00                <1>
    63                              <1>  section .text
    63 000001D2 488B3C25[0C000000]  <1>  mov rdi, %2
    63 000001DA 48BE-               <1>  mov rsi, %%arg1
    63 000001DC [5B00000000000000]  <1>
    63 000001E4 B800000000          <1>  mov rax, 0
    63 000001E9 E8(00000000)        <1>  call fprintf
    64                                          PrintContainer2 [pcont], [len], [FILE]
    64 000001EE 488B3C25[00000000]  <1>  mov rdi, %1
    64 000001F6 8B3425[08000000]    <1>  mov esi, %2
    64 000001FD 488B1425[0C000000]  <1>  mov rdx, %3
    64 00000205 B800000000          <1>  mov rax, 0
    64 0000020A E8(00000000)        <1>  call OutContainer
    65                                          PrintInt2 [pcont], [FILE]
    65                              <1>  section .data
    65 00000066 2564200A00          <1>  %%arg1 db "%d ",10,0
    65                              <1>  section .text
    65 0000020F 488B3C25[0C000000]  <1>  mov rdi, %2
    65 00000217 48BE-               <1>  mov rsi, %%arg1
    65 00000219 [6600000000000000]  <1>
    65 00000221 488B1425[00000000]  <1>  mov rdx, %1
    65 00000229 B800000000          <1>  mov rax, 0
    65 0000022E E8(00000000)        <1>  call fprintf
    66                                          ; PrintInt2 [pcont+1], [FILE]
    67                                  
    68 00000233 8A07                    		mov al, [rdi]				;Get [j] in al
    69 00000235 8A5F01                  		mov bl, [rdi+1]			;Get [j+1]in bl
    70 00000238 38D8                    		cmp al, bl
    71 0000023A 7205                    		jb skip						;Compares
    72 0000023C 884701                  		mov [rdi+1], al					;If larger swapped
    73 0000023F 881F                    		mov [rdi], bl
    74                                  		skip:
    75                                              PrintStr2 "entered skip", [FILE]
    75                              <1>  section .data
    75 0000006B 656E74657265642073- <1>  %%arg1 db %1,10,0
    75 00000074 6B69700A00          <1>
    75                              <1>  section .text
    75 00000241 488B3C25[0C000000]  <1>  mov rdi, %2
    75 00000249 48BE-               <1>  mov rsi, %%arg1
    75 0000024B [6B00000000000000]  <1>
    75 00000253 B800000000          <1>  mov rax, 0
    75 00000258 E8(00000000)        <1>  call fprintf
    76 0000025D 4883C701                		    add rdi, 1			;Else continues to next number
    77 00000261 802C25[18000000]01      		    sub byte[cntr2], 1
    78 00000269 0F8563FFFFFF            		    jnz up2
    79                                  			
    80 0000026F 802C25[14000000]01      	sub byte[cntr], 1						;Decrements n (Rather to increase i)
    81 00000277 0F85F9FEFFFF            	jnz up1
    82 0000027D C3                      	ret
