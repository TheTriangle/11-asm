     1                                  ; file.asm - использование файлов в NASM
     2                                  extern printf
     3                                  extern rand
     4                                  
     5                                  extern COMPLEXNUMBER
     6                                  extern FRACTION
     7                                  extern COORDINATES
     8                                  
     9                                  
    10                                  global Random
    11                                  Random:
    12                                  section .data
    13 00000000 E803000000000000            .i20     dq      1000
    14 00000008 52616E646F6D206E75-         .rndNumFmt       db "Random number = %d",10,0
    14 00000011 6D626572203D202564-
    14 0000001A 0A00               
    15                                  section .text
    16 00000000 55                      push rbp
    17 00000001 4889E5                  mov rbp, rsp
    18                                  
    19                                  
    20 00000004 4831C0                      xor     rax, rax    ;
    21 00000007 E8(00000000)                call    rand        ; запуск генератора случайных чисел
    22 0000000C 4831D2                      xor     rdx, rdx    ; обнуление перед делением
    23 0000000F 48F73C25[00000000]          idiv    qword[.i20]       ; (/%) -> остаток в rdx
    24 00000017 4889D0                      mov     rax, rdx
    25 0000001A 48FFC0                      inc     rax         ; должно сформироваться случайное число
    26                                  
    27                                      ;mov     rdi, .rndNumFmt
    28                                      ;mov     esi, eax
    29                                      ;xor     rax, rax
    30                                      ;call    printf
    31 0000001D C9                      leave
    32 0000001E C3                      ret
    33                                  
    34                                  
    35                                  global InRndComplexNumber
    36                                  InRndComplexNumber:
    37                                  section .bss
    38 00000000 <res 00000008>              .pcomp  resq 1   ; адрес 
    39                                  section .text
    40 0000001F 55                      push rbp
    41 00000020 4889E5                  mov rbp, rsp
    42                                  
    43                                      ; В rdi адрес 
    44 00000023 48893C25[00000000]          mov     [.pcomp], rdi
    45                                  
    46 0000002B E8D0FFFFFF                  call    Random
    47 00000030 488B1C25[00000000]          mov     rbx, [.pcomp]
    48 00000038 8903                        mov     [rbx], eax
    49 0000003A E8C1FFFFFF                  call    Random
    50 0000003F 488B1C25[00000000]          mov     rbx, [.pcomp]
    51 00000047 894304                      mov     [rbx+4], eax
    52                                  
    53 0000004A C9                      leave
    54 0000004B C3                      ret
    55                                  
    56                                  
    57                                  global InRndFraction
    58                                  InRndFraction:
    59                                  section .bss
    60 00000008 <res 00000008>              .pfrac  resq 1   ; адрес 
    61                                  section .text
    62 0000004C 55                      push rbp
    63 0000004D 4889E5                  mov rbp, rsp
    64                                  
    65                                      ; В rdi адрес 
    66 00000050 48893C25[08000000]          mov     [.pfrac], rdi
    67                                      
    68 00000058 E8A3FFFFFF                  call    Random
    69 0000005D 488B1C25[08000000]          mov     rbx, [.pfrac]
    70 00000065 8903                        mov     [rbx], eax
    71 00000067 E894FFFFFF                  call    Random
    72 0000006C 488B1C25[08000000]          mov     rbx, [.pfrac]
    73 00000074 894304                      mov     [rbx+4], eax
    74                                  
    75 00000077 C9                      leave
    76 00000078 C3                      ret
    77                                  
    78                                  global InRndCoordinates
    79                                  InRndCoordinates:
    80                                  section .bss
    81 00000010 <res 00000008>              .pcord  resq 1   ; адрес 
    82                                  section .text
    83 00000079 55                      push rbp
    84 0000007A 4889E5                  mov rbp, rsp
    85                                  
    86                                      ; В rdi адрес 
    87 0000007D 48893C25[10000000]          mov     [.pcord], rdi
    88                                      
    89 00000085 E876FFFFFF                  call    Random
    90 0000008A 488B1C25[10000000]          mov     rbx, [.pcord]
    91 00000092 8903                        mov     [rbx], eax
    92 00000094 E867FFFFFF                  call    Random
    93 00000099 488B1C25[10000000]          mov     rbx, [.pcord]
    94 000000A1 894304                      mov     [rbx+4], eax
    95                                  
    96 000000A4 C9                      leave
    97 000000A5 C3                      ret
    98                                  
    99                                  
   100                                  global InRndNumber
   101                                  InRndNumber:
   102                                  section .data
   103 0000001C 0200000000000000            .i3     dq      2
   104 00000024 52616E646F6D206E75-         .rndNumFmt       db "Random number = %d",10,0
   104 0000002D 6D626572203D202564-
   104 00000036 0A00               
   105                                  section .bss
   106 00000018 <res 00000008>              .pnumber     resq    1   ; адрес 
   107 00000020 <res 00000004>              .key        resd    1   ; ключ
   108                                  section .text
   109 000000A6 55                      push rbp
   110 000000A7 4889E5                  mov rbp, rsp
   111                                  
   112                                      ; В rdi адрес 
   113 000000AA 48893C25[18000000]          mov [.pnumber], rdi
   114                                      
   115 000000B2 4831D2                      xor     rdx, rdx    ;
   116 000000B5 E8(00000000)                call    rand        ; запуск генератора случайных чисел
   117 000000BA 31D2                        xor     edx, edx    ; обнуление перед делением
   118 000000BC 48F73C25[1C000000]          idiv    qword[.i3]       ; (/%) -> остаток в rdx
   119 000000C4 89D0                        mov     eax, edx
   120 000000C6 FFC0                        inc     eax         ; должно сформироваться случайное число
   121                                  
   122                                  
   123 000000C8 488B3C25[18000000]          mov     rdi, [.pnumber]
   124 000000D0 8907                        mov     [rdi], eax      ; запись ключа
   125 000000D2 3B0425[00000000]            cmp eax, [COMPLEXNUMBER] ; 1
   126 000000D9 7416                        je .compInRnd
   127 000000DB 3B0425[00000000]            cmp eax, [FRACTION] ; 3
   128 000000E2 741D                        je .fracInRnd
   129 000000E4 3B0425[00000000]            cmp eax, [COORDINATES] ; 2
   130 000000EB 7424                        je .coordInRnd
   131 000000ED 31C0                        xor eax, eax        ; код возврата = 0
   132 000000EF EB2E                        jmp     .return
   133                                  .compInRnd:
   134 000000F1 4883C704                    add     rdi, 4
   135 000000F5 E825FFFFFF                  call    InRndComplexNumber
   136 000000FA B801000000                  mov     eax, 1      ;код возврата = 1
   137 000000FF EB1E                        jmp     .return
   138                                  .fracInRnd:
   139 00000101 4883C704                    add     rdi, 4
   140 00000105 E842FFFFFF                  call    InRndFraction
   141 0000010A B801000000                  mov     eax, 1      ;код возврата = 1
   142 0000010F EB0E                        jmp .return
   143                                  .coordInRnd:
   144 00000111 4883C704                    add     rdi, 4
   145 00000115 E85FFFFFFF                  call    InRndCoordinates
   146 0000011A B801000000                  mov     eax, 1      ;код возврата = 1
   147                                  .return:
   148 0000011F C9                      leave
   149 00000120 C3                      ret
   150                                  
   151                                  
   152                                  global InRndContainer
   153                                  InRndContainer:
   154                                  section .bss
   155 00000024 <res 00000008>              .pcont  resq    1   ; адрес контейнера
   156 0000002C <res 00000008>              .plen   resq    1   ; адрес для сохранения числа введенных элементов
   157 00000034 <res 00000004>              .psize  resd    1   ; число порождаемых элементов
   158                                  section .text
   159 00000121 55                      push rbp
   160 00000122 4889E5                  mov rbp, rsp
   161                                  
   162 00000125 48893C25[24000000]          mov [.pcont], rdi   ; сохраняется указатель на контейнер
   163 0000012D 48893425[2C000000]          mov [.plen], rsi    ; сохраняется указатель на длину
   164 00000135 891425[34000000]            mov [.psize], edx    ; сохраняется число порождаемых элементов
   165                                      ; В rdi адрес начала контейнера
   166 0000013C 31DB                        xor ebx, ebx        ; число фигур = 0
   167                                  .loop:
   168 0000013E 39D3                        cmp ebx, edx
   169 00000140 7D1A                        jge     .return
   170                                      ; сохранение рабочих регистров
   171 00000142 57                          push rdi
   172 00000143 53                          push rbx
   173 00000144 52                          push rdx
   174                                  
   175 00000145 E85CFFFFFF                  call    InRndNumber     ; ввод
   176 0000014A 4883F800                    cmp rax, 0          ; проверка успешности ввода
   177 0000014E 7E0C                        jle  .return        ; выход, если признак меньше или равен 0
   178                                  
   179 00000150 5A                          pop rdx
   180 00000151 5B                          pop rbx
   181 00000152 48FFC3                      inc rbx
   182                                  
   183 00000155 5F                          pop rdi
   184 00000156 4883C710                    add rdi, 16            
   185                                  
   186 0000015A EBE2                        jmp .loop
   187                                  .return:
   188 0000015C 488B0425[2C000000]          mov rax, [.plen]    ; перенос указателя на длину
   189 00000164 8918                        mov [rax], ebx      ; занесение длины
   190 00000166 C9                      leave
   191 00000167 C3                      ret
